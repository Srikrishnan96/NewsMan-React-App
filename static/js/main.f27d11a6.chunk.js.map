{"version":3,"sources":["constants/index.js","components/Button/index.js","components/Table/index.js","components/App/index.js","components/Search/index.js","serviceWorker.js","components/Javascript/index.js","components/Node/index.js","index.js"],"names":["PATH_BASE","Button","_ref","onClick","_ref$className","className","children","react_default","a","createElement","Loading","Sort","_ref2","sortKey","onSort","activeSortKey","sortClass","push","Component","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isSortReverse","bind","assertThisInitialized","setState","_this$props","removeItem","_this$state","sortedList","reverserSortedList","map","item","key","objectID","href","url","title","author","num_comments","points","Search","input","focus","onChange","value","onSubmit","FormGroup","style","border","width","type","ref","node","ButtonWithLoading","isLoading","rest","objectWithoutProperties","App","results","searchKey","searchTerm","fetchTopStories","setTopStories","searchValue","result","hits","page","prevState","oldHits","updatedHits","concat","toConsumableArray","objectSpread","defineProperty","updateTopStories","_this2","fetch","then","response","json","catch","err","event","checkTopStoriesSearchTerm","preventDefault","e","target","toLowerCase","includes","_results$searchKey","newList","filter","_this3","_this$state2","Row","components_Search","components_Table","Boolean","window","location","hostname","match","withLoading","Javascript","Javascript_ButtonWithLoading","Node","Node_ButtonWithLoading","ReactDOM","render","react_router_dom","basename","Navbar","Brand","to","Toggle","Collapse","Nav","NavItem","exact","actionClassName","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f27d11a6.chunk.js","sourcesContent":["// fetch URL constants\r\n\r\nexport const DEFAULT_QUERY = 'react';\r\nexport const DEFAULT_PAGE = 0;\r\nexport const DEFAULT_HPP = 10;\r\n\r\nexport const PATH_BASE = 'https://hn.algolia.com/api/v1';\r\nexport const PATH_SEARCH = '/search';\r\nexport const PARAM_SEARCH = 'query=';\r\nexport const PARAM_PAGE = 'page=';\r\nexport const PARAM_HPP = 'hitsPerPage=';","import React from 'react';\r\n\r\nexport function Button({onClick, className='', children}) {\r\n    return (\r\n      <button className= {className} onClick={ onClick }>\r\n        {children}\r\n      </button>\r\n    )\r\n  }\r\n  \r\nexport function Loading() {\r\n    return(\r\n    <h2>\r\n      Loading...\r\n    </h2>\r\n    );\r\n  }\r\n  \r\nexport function Sort({sortKey, onSort, children, className, activeSortKey}) {\r\n    const sortClass = ['btn default']\r\n    if(sortKey === activeSortKey) {\r\n      sortClass.push('btn btn-primary');\r\n    }\r\n    return (\r\n    <Button className={sortClass} onClick={()=> onSort(sortKey)}>\r\n      {children}\r\n    </Button>\r\n    );\r\n  }","import React, {Component} from 'react';\r\nimport {sortBy} from 'lodash';\r\nimport { Button, Sort } from '../Button/index';\r\n\r\nconst SORTS = {\r\n    NONE: list => list,\r\n    TITLE: list => sortBy(list, 'title'),\r\n    AUTHOR: list => sortBy(list, 'author'),\r\n    COMMENTS: list => sortBy(list, 'num_comments').reverse(),\r\n    POINTS: list => sortBy(list, 'points').reverse()\r\n  }\r\n\r\nclass Table extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        sortKey: 'NONE',\r\n        isSortReverse: 'false'\r\n      }\r\n      this.onSort = this.onSort.bind(this)\r\n    }\r\n  \r\n    // Sorting  \r\n    onSort(sortKey) {\r\n      const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n      this.setState({ sortKey, isSortReverse })\r\n    }\r\n  \r\n    render() {\r\n      const {list, removeItem} = this.props;\r\n      const {sortKey, isSortReverse} = this.state;\r\n      const sortedList = SORTS[sortKey](list);\r\n      const reverserSortedList = isSortReverse? sortedList.reverse() : sortedList;\r\n    return (\r\n      <div className=\"col-sm-10 col-sm-offset-1\">\r\n        <div className=\"text-center mt-4\">\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'NONE'} onSort={this.onSort} activeSortKey={sortKey}>Default</Sort>\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'TITLE'} onSort={this.onSort} activeSortKey={sortKey}>Title</Sort>\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'AUTHOR'} onSort={this.onSort} activeSortKey={sortKey}>Author</Sort>\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'COMMENTS'} onSort={this.onSort} activeSortKey={sortKey}>Comments</Sort>\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'POINTS'} onSort={this.onSort} activeSortKey={sortKey}>Points</Sort>\r\n          <hr/> \r\n        </div>\r\n         {\r\n            reverserSortedList.map(\r\n              item => \r\n                <div key={item.objectID}>\r\n                  <h2>\r\n                    <a href={item.url}>\r\n                      {item.title}\r\n                    </a> \r\n                  </h2>\r\n                  <h4>\r\n                   { item.author } | { item.num_comments } Comments | {item.points} Points\r\n                    <Button onClick={() => removeItem(item.objectID)} className=\"btn btn-danger ml-3\">REMOVE</Button>\r\n                  </h4><hr/>\r\n                </div>\r\n                )\r\n         }\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n  export default Table;","import React, {Component} from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport { DEFAULT_HPP, DEFAULT_PAGE, PARAM_HPP, PATH_BASE, PARAM_PAGE, PARAM_SEARCH, PATH_SEARCH} from '../../constants/index';\r\nimport Table from '../Table/index';\r\nimport { Button, Loading } from '../Button/index';\r\nimport Search from '../Search/index';\r\n\r\n// HIGHER ORDER \r\nconst withLoading = (Component) => ({isLoading, ...rest}) =>\r\n  isLoading?<Loading /> : <Component {...rest} />\r\n\r\nconst ButtonWithLoading = withLoading(Button);\r\n\r\nfunction updateTopStories(hits, page) {\r\n  return function(prevState)  {\r\n    const { searchKey, results } = prevState;\r\n    const oldHits = results &&  results[searchKey] ? results[searchKey].hits : [];\r\n    const updatedHits = [...oldHits, ...hits]\r\n    return {results:{ ...results, [searchKey]: {hits: updatedHits, page}}, isLoading: false}\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: '',\r\n      searchTerm: '',\r\n      isLoading: false,\r\n    }\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onSort = this.onSort.bind(this);\r\n\r\n  }\r\n\r\n  // Sorting\r\n  onSort(sortKey) {\r\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse })\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  //Setting stories\r\n  setTopStories(result) {\r\n    const {hits, page} = result;\r\n    this.setState(updateTopStories(hits, page));\r\n  }\r\n\r\n  //Fetching from API\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({isLoading: true});\r\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\r\n    .then(response => response.json())\r\n    .then(result => this.setTopStories(result)).catch(err => err);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {searchTerm} = this.state;\r\n    this.setState({searchKey: searchTerm});\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  // search (on server side) submit function\r\n  onSubmit(event) {\r\n    const {searchTerm} = this.state;\r\n    this.setState({searchKey: searchTerm});\r\n    if(this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  searchValue(e) {\r\n    this.setState({searchTerm: e.target.value});\r\n  }\r\n\r\n  filterOut(item) {\r\n    return item.title.toLowerCase().includes(this.state.searchTerm.toLowerCase());\r\n  }\r\n\r\n  removeItem(objectID) {\r\n    const { results, searchKey } =this.state;\r\n    const { hits, page } = results[searchKey];\r\n    function isNotId(item) {\r\n      return item.objectID !== objectID;\r\n    }\r\n    var newList = hits.filter(isNotId);\r\n    this.setState({results: { ...results, [searchKey]: { hits: newList, page }}});\r\n  }\r\n  \r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page = (results && results[searchKey] && results[searchKey].page ) || 0;\r\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\r\n    return (\r\n      <div className=\"App\">\r\n        <Row>\r\n            <div className=\"jumbotron\">\r\n              <Search className=\"justify-content-md-center\" onChange={this.searchValue} value={searchTerm} onSubmit={this.onSubmit}> NEWS MAN </Search>\r\n            </div>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          {\r\n            <Table list = {list} removeItem={this.removeItem} />\r\n          }\r\n        </Row>\r\n        <div className=\"text-center alert\">\r\n\r\n            {\r\n              <ButtonWithLoading isLoading={ isLoading } className=\"btn btn-success\" onClick={()=>this.fetchTopStories(searchTerm, page+1)}>LOAD MORE</ButtonWithLoading>\r\n            }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","import React, { Component } from 'react';\r\nimport { FormGroup } from 'react-bootstrap';\r\nimport { Button } from '../Button/index';\r\n \r\nclass Search extends Component {\r\n    \r\n    componentDidMount() {\r\n      this.input.focus();\r\n    }\r\n  \r\n    render() {\r\n      const {onChange, value, children, onSubmit} = this.props;\r\n      return (\r\n        <form onSubmit={onSubmit}>\r\n          <FormGroup>\r\n            <h1 className=\"text-center\">{children}</h1><hr style={{border: '2px solid black', width: '100px'}}/>\r\n  \r\n            <div className=\"input-group\">\r\n              <input className=\"form-control width100 searchForm\" type=\"text\" onChange={onChange} value={value} ref={(node) => {this.input = node}}/>\r\n              <span className=\"input-group-btn\">\r\n                <Button className=\"btn btn-primary searchButton\" type=\"submit\">\r\n                  Search\r\n                </Button>\r\n              </span>\r\n            </div>\r\n          </FormGroup>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Search;\r\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, {Component} from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport { DEFAULT_HPP, DEFAULT_PAGE, PARAM_HPP, PATH_BASE, PARAM_PAGE, PARAM_SEARCH, PATH_SEARCH} from '../../constants/index.js'\r\nimport Table from '../Table/index';\r\nimport { Button, Loading } from '../Button/index';\r\n\r\n// HIGHER ORDER \r\nconst withLoading = (Component) => ({isLoading, ...rest}) =>\r\n  isLoading?<Loading /> : <Component {...rest} />\r\n\r\nconst ButtonWithLoading = withLoading(Button);\r\n\r\nfunction updateTopStories(hits, page) {\r\n  return function(prevState)  {\r\n    const { searchKey, results } = prevState;\r\n    const oldHits = results &&  results[searchKey] ? results[searchKey].hits : [];\r\n    const updatedHits = [...oldHits, ...hits]\r\n    return {results:{ ...results, [searchKey]: {hits: updatedHits, page}}, isLoading: false}\r\n  }\r\n}\r\n\r\nclass Javascript extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: '',\r\n      searchTerm: 'Javascript',\r\n      isLoading: false,\r\n    }\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onSort = this.onSort.bind(this);\r\n\r\n  }\r\n\r\n  onSort(sortKey) {\r\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse })\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  //Setting stories\r\n  setTopStories(result) {\r\n    const {hits, page} = result;\r\n    this.setState(updateTopStories(hits, page));\r\n  }\r\n\r\n  //Fetching from API\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({isLoading: true});\r\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\r\n    .then(response => response.json())\r\n    .then(result => this.setTopStories(result)).catch(err => err);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {searchTerm} = this.state;\r\n    this.setState({searchKey: searchTerm});\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  // search (on server side) submit function\r\n  onSubmit(event) {\r\n    const {searchTerm} = this.state;\r\n    this.setState({searchKey: searchTerm});\r\n    if(this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  searchValue(e) {\r\n    this.setState({searchTerm: e.target.value});\r\n  }\r\n\r\n  filterOut(item) {\r\n    return item.title.toLowerCase().includes(this.state.searchTerm.toLowerCase());\r\n  }\r\n\r\n  removeItem(objectID) {\r\n    const { results, searchKey } =this.state;\r\n    const { hits, page } = results[searchKey];\r\n    function isNotId(item) {\r\n      return item.objectID !== objectID;\r\n    }\r\n    var newList = hits.filter(isNotId);\r\n    this.setState({results: { ...results, [searchKey]: { hits: newList, page }}});\r\n  }\r\n\r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page = (results && results[searchKey] && results[searchKey].page ) || 0;\r\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\r\n    return (\r\n      <div className=\"App\">\r\n        <Row className=\"justify-content-md-center\">\r\n          {\r\n            <Table list = {list} removeItem={this.removeItem} />\r\n          }\r\n        </Row>\r\n        <div className=\"text-center alert\">\r\n\r\n            {\r\n              <ButtonWithLoading isLoading={ isLoading } className=\"btn btn-success\" onClick={()=>this.fetchTopStories(searchTerm, page+1)}>LOAD MORE</ButtonWithLoading>\r\n            }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Javascript;\r\n\r\n","import React, {Component} from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport { DEFAULT_HPP, DEFAULT_PAGE, PARAM_HPP, PATH_BASE, PARAM_PAGE, PARAM_SEARCH, PATH_SEARCH} from '../../constants/index.js'\r\nimport Table from '../Table/index';\r\nimport { Button, Loading } from '../Button/index';\r\n\r\n// HIGHER ORDER \r\nconst withLoading = (Component) => ({isLoading, ...rest}) =>\r\n  isLoading?<Loading /> : <Component {...rest} />\r\n\r\nconst ButtonWithLoading = withLoading(Button);\r\n\r\nfunction updateTopStories(hits, page) {\r\n  return function(prevState)  {\r\n    const { searchKey, results } = prevState;\r\n    const oldHits = results &&  results[searchKey] ? results[searchKey].hits : [];\r\n    const updatedHits = [...oldHits, ...hits]\r\n    return {results:{ ...results, [searchKey]: {hits: updatedHits, page}}, isLoading: false}\r\n  }\r\n}\r\n\r\nclass Node extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: '',\r\n      searchTerm: 'Node',\r\n      isLoading: false,\r\n    }\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onSort = this.onSort.bind(this);\r\n\r\n  }\r\n\r\n  // Sorting\r\n  onSort(sortKey) {\r\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse })\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  //Setting stories\r\n  setTopStories(result) {\r\n    const {hits, page} = result;\r\n    this.setState(updateTopStories(hits, page));\r\n  }\r\n\r\n  //Fetching from API\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({isLoading: true});\r\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\r\n    .then(response => response.json())\r\n    .then(result => this.setTopStories(result)).catch(err => err);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {searchTerm} = this.state;\r\n    this.setState({searchKey: searchTerm});\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  // search (on server side) submit function\r\n  onSubmit(event) {\r\n    const {searchTerm} = this.state;\r\n    this.setState({searchKey: searchTerm});\r\n    if(this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  searchValue(e) {\r\n    this.setState({searchTerm: e.target.value});\r\n  }\r\n\r\n  filterOut(item) {\r\n    return item.title.toLowerCase().includes(this.state.searchTerm.toLowerCase());\r\n  }\r\n\r\n  removeItem(objectID) {\r\n    const { results, searchKey } =this.state;\r\n    const { hits, page } = results[searchKey];\r\n    function isNotId(item) {\r\n      return item.objectID !== objectID;\r\n    }\r\n    var newList = hits.filter(isNotId);\r\n    this.setState({results: { ...results, [searchKey]: { hits: newList, page }}});\r\n  }\r\n\r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page = (results && results[searchKey] && results[searchKey].page ) || 0;\r\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\r\n    return (\r\n      <div className=\"App\">\r\n        <Row className=\"justify-content-md-center\">\r\n          {\r\n            <Table list = {list} removeItem={this.removeItem} />\r\n          }\r\n        </Row>\r\n        <div className=\"text-center alert\">\r\n\r\n            {\r\n              <ButtonWithLoading isLoading={ isLoading } className=\"btn btn-success\" onClick={()=>this.fetchTopStories(searchTerm, page+1)}>LOAD MORE</ButtonWithLoading>\r\n            }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Node;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\nimport Javascript from './components/Javascript';\nimport Node from './components/Node';\n\nfunction Root() {\n    return(\n        <Router basename=\"/NewsMan-React-App/\">\n            <div>\n                <Navbar className=\"bg-light\">\n                    <Navbar.Brand>\n                        <Link to=\"/\">NEWSMAN</Link>\n                    </Navbar.Brand>\n                    <Navbar.Toggle/>\n                    <Navbar.Collapse>\n                        <Nav>\n                            <NavItem className=\"ml-3\">\n                                <NavLink exact to=\"/\" actionClassName=\"active\">Home</NavLink>\n                            </NavItem>\n                            <NavItem className=\"ml-3\">\n                                <NavLink to=\"/javascript\" actionClassName=\"active\">Javascript</NavLink>\n                            </NavItem>\n                            <NavItem className=\"ml-3\">\n                                <NavLink to=\"/node\" actionClassName=\"active\">Node</NavLink>\n                            </NavItem>\n                        </Nav>\n                    </Navbar.Collapse>\n                </Navbar>\n                \n                <Route path=\"/\" exact component={App}/>\n                <Route path=\"/javascript\" component={Javascript}/>\n                <Route path=\"/node\" component={Node}/>\n\n            </div>\n        </Router>\n    );\n}\n\nReactDOM.render(<Root />, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}