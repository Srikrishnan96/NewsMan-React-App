{"version":3,"sources":["components/Button/index.js","components/Table/index.js","components/Search/index.js","components/App/index.js","constants/index.js","serviceWorker.js","components/NavMenu/React.js","components/NavMenu/Node.js","components/NavMenu/MongoDB.js","components/NavMenu/Express.js","index.js"],"names":["Button","_ref","onClick","_ref$className","className","children","react_default","a","createElement","Loading","Sort","_ref2","sortKey","onSort","activeSortKey","sortClass","push","SORTS","NONE","list","TITLE","sortBy","AUTHOR","COMMENTS","reverse","POINTS","Table","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isSortReverse","bind","assertThisInitialized","setState","_this$props","removeItem","_this$state","sortedList","reverserSortedList","map","item","key","objectID","href","url","title","author","num_comments","points","Component","Search","input","focus","onChange","value","onSubmit","FormGroup","style","border","width","type","ref","node","App","results","searchKey","searchTerm","isLoading","fetchTopStories","setTopStories","searchValue","result","hits","page","updateTopStories","_this2","fetch","concat","then","response","json","catch","err","event","checkTopStoriesSearchTerm","preventDefault","e","target","toLowerCase","includes","_results$searchKey","newList","filter","objectSpread","defineProperty","_this3","_this$state2","ButtonWithLoadingg","Row","components_Search","components_Table","prevState","oldHits","updatedHits","toConsumableArray","rest","objectWithoutProperties","Boolean","window","location","hostname","match","Reactjs","components_App","Node","MongoDB","Express","ReactDOM","render","react_router_dom","basename","Navbar","Brand","to","Toggle","Collapse","Nav","NavItem","exact","actionClassName","react_router","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1d5a810.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport function Button({onClick, className='', children}) {\r\n    return (\r\n      <button className= {className} onClick={ onClick }>\r\n        {children}\r\n      </button>\r\n    )\r\n  }\r\n  \r\nexport function Loading() {\r\n    return(\r\n    <h2>\r\n      Loading...\r\n    </h2>\r\n    );\r\n  }\r\n  \r\nexport function Sort({sortKey, onSort, children, className, activeSortKey}) {\r\n    const sortClass = ['btn default']\r\n    if(sortKey === activeSortKey) {\r\n      sortClass.push('btn btn-primary');\r\n    }\r\n    return (\r\n    <Button className={sortClass} onClick={()=> onSort(sortKey)}>\r\n      {children}\r\n    </Button>\r\n    );\r\n  }","import React, {Component} from 'react';\r\nimport {sortBy} from 'lodash';\r\nimport { Button, Sort } from '../Button/index';\r\n\r\nconst SORTS = {\r\n    NONE: list => list,\r\n    TITLE: list => sortBy(list, 'title'),\r\n    AUTHOR: list => sortBy(list, 'author'),\r\n    COMMENTS: list => sortBy(list, 'num_comments').reverse(),\r\n    POINTS: list => sortBy(list, 'points').reverse()\r\n  }\r\n\r\nclass Table extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        sortKey: 'NONE',\r\n        isSortReverse: 'false'\r\n      }\r\n      this.onSort = this.onSort.bind(this)\r\n    }\r\n  \r\n    // Sorting  \r\n    onSort(sortKey) {\r\n      const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n      this.setState({ sortKey, isSortReverse })\r\n    }\r\n  \r\n    render() {\r\n      const {list, removeItem} = this.props;\r\n      const {sortKey, isSortReverse} = this.state;\r\n      const sortedList = SORTS[sortKey](list);\r\n      const reverserSortedList = isSortReverse? sortedList.reverse() : sortedList;\r\n    return (\r\n      <div className=\"col-sm-10 col-sm-offset-1\">\r\n        <div className=\"text-center mt-4\">\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'NONE'} onSort={this.onSort} activeSortKey={sortKey}>Default</Sort>\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'TITLE'} onSort={this.onSort} activeSortKey={sortKey}>Title</Sort>\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'AUTHOR'} onSort={this.onSort} activeSortKey={sortKey}>Author</Sort>\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'COMMENTS'} onSort={this.onSort} activeSortKey={sortKey}>Comments</Sort>\r\n          <Sort className=\"btn btn-default btn-xs sortBtn\" sortKey={'POINTS'} onSort={this.onSort} activeSortKey={sortKey}>Points</Sort>\r\n          <hr/> \r\n        </div>\r\n         {\r\n            reverserSortedList.map(\r\n              item => \r\n                <div key={item.objectID}>\r\n                  <h2>\r\n                    <a href={item.url}>\r\n                      {item.title}\r\n                    </a> \r\n                  </h2>\r\n                  <h4>\r\n                   { item.author } | { item.num_comments } Comments | {item.points} Points\r\n                    <Button onClick={() => removeItem(item.objectID)} className=\"btn btn-danger ml-3\">REMOVE</Button>\r\n                  </h4><hr/>\r\n                </div>\r\n                )\r\n         }\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\n  export default Table;","import React, { Component } from 'react';\r\nimport { FormGroup } from 'react-bootstrap';\r\nimport { Button } from '../Button/index';\r\n \r\nclass Search extends Component {\r\n    \r\n    componentDidMount() {\r\n      this.input.focus();\r\n    }\r\n  \r\n    render() {\r\n      const {onChange, value, children, onSubmit} = this.props;\r\n      return (\r\n        <form onSubmit={onSubmit}>\r\n          <FormGroup>\r\n            <h1 className=\"text-center text-white\">{children}</h1><hr style={{border: '2px solid white', width: '200px'}}/>\r\n  \r\n            <div className=\"input-group\">\r\n              <input className=\"form-control width100 searchForm\" type=\"text\" onChange={onChange} value={value} ref={(node) => {this.input = node}}/>\r\n              <span className=\"input-group-btn\">\r\n                <Button className=\"btn btn-primary searchButton\" type=\"submit\">\r\n                  Search\r\n                </Button>\r\n              </span>\r\n            </div>\r\n          </FormGroup>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default Search;\r\n  ","import React, {Component} from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport { DEFAULT_HPP, DEFAULT_PAGE, PARAM_HPP, PATH_BASE, PARAM_PAGE, PARAM_SEARCH, PATH_SEARCH} from '../../constants/index';\r\nimport Table from '../Table/index';\r\nimport { Button, Loading } from '../Button/index';\r\nimport Search from '../Search/index';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      results: null,\r\n      searchKey: '',\r\n      searchTerm: props.searchTerm?props.searchTerm:'',\r\n      isLoading: false\r\n    }\r\n    this.fetchTopStories = this.fetchTopStories.bind(this);\r\n    this.setTopStories = this.setTopStories.bind(this);\r\n    this.searchValue = this.searchValue.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n    this.onSort = this.onSort.bind(this);\r\n\r\n  }\r\n\r\n  static Loading = (Component) => ({isLoading, ...rest}) =>\r\n  isLoading?<Loading/> : <Component {...rest} />\r\n\r\n  static updateTopStories(hits, page) {\r\n    return function(prevState)  {\r\n      const { searchKey, results } = prevState;\r\n      const oldHits = results &&  results[searchKey] ? results[searchKey].hits : [];\r\n      const updatedHits = [...oldHits, ...hits]\r\n      return {results:{ ...results, [searchKey]: {hits: updatedHits, page}}, isLoading: false}\r\n    }\r\n  }\r\n\r\n  onSort(sortKey) {\r\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\r\n    this.setState({ sortKey, isSortReverse })\r\n  }\r\n\r\n  checkTopStoriesSearchTerm(searchTerm) {\r\n    return !this.state.results[searchTerm];\r\n  }\r\n\r\n  setTopStories(result) {\r\n    const {hits, page} = result;\r\n    this.setState(App.updateTopStories(hits, page));\r\n  }\r\n\r\n  fetchTopStories(searchTerm, page) {\r\n    this.setState({isLoading: true});\r\n    fetch(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\r\n    .then(response => response.json())\r\n    .then(result => this.setTopStories(result)).catch(err => err);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const {searchTerm} = this.state;\r\n    this.setState({searchKey: searchTerm});\r\n    this.fetchTopStories(searchTerm, DEFAULT_PAGE);\r\n  }\r\n\r\n  onSubmit(event) {\r\n    const {searchTerm} = this.state;\r\n    this.setState({searchKey: searchTerm});\r\n    if(this.checkTopStoriesSearchTerm(searchTerm)) {\r\n      this.fetchTopStories(this.state.searchTerm, DEFAULT_PAGE);\r\n    }\r\n    event.preventDefault();\r\n  }\r\n\r\n  searchValue(e) {\r\n    this.setState({searchTerm: e.target.value});\r\n  }\r\n\r\n  filterOut(item) {\r\n    return item.title.toLowerCase().includes(this.state.searchTerm.toLowerCase());\r\n  }\r\n\r\n  removeItem(objectID) {\r\n    const { results, searchKey } =this.state;\r\n    const { hits, page } = results[searchKey];\r\n    function isNotId(item) {\r\n      return item.objectID !== objectID;\r\n    }\r\n    var newList = hits.filter(isNotId);\r\n    this.setState({results: { ...results, [searchKey]: { hits: newList, page }}});\r\n  }\r\n  \r\n  render() {\r\n    const { results, searchTerm, searchKey, isLoading } = this.state;\r\n    const page = (results && results[searchKey] && results[searchKey].page ) || 0;\r\n    const list = (results && results[searchKey] && results[searchKey].hits) || [];\r\n    const ButtonWithLoadingg = App.Loading(Button);\r\n    return (\r\n      <div className=\"App\">\r\n        {this.props.searchTerm?\r\n        '':<Row>\r\n            <div className=\"jumbotron\">\r\n              <Search className=\"justify-content-md-center\" onChange={this.searchValue} value={searchTerm} onSubmit={this.onSubmit}> NEWS MAN </Search>\r\n            </div>\r\n        </Row>\r\n        }\r\n        <Row className=\"justify-content-md-center\">\r\n          {\r\n            <Table list = {list} removeItem={this.removeItem} />\r\n          }\r\n        </Row>\r\n        <div className=\"text-center alert\">\r\n\r\n            {\r\n              <ButtonWithLoadingg isLoading={ isLoading } className=\"btn btn-success\" onClick={()=>this.fetchTopStories(searchTerm, page+1)}>LOAD MORE</ButtonWithLoadingg>\r\n            }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n","// fetch URL constants\r\n\r\nexport const DEFAULT_QUERY = 'react';\r\nexport const DEFAULT_PAGE = 0;\r\nexport const DEFAULT_HPP = 10;\r\n\r\nexport const PATH_BASE = 'https://hn.algolia.com/api/v1';\r\nexport const PATH_SEARCH = '/search';\r\nexport const PARAM_SEARCH = 'query=';\r\nexport const PARAM_PAGE = 'page=';\r\nexport const PARAM_HPP = 'hitsPerPage=';","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport App from '../App';\r\n\r\nfunction Reactjs() {\r\n  return <App searchTerm={\"React\"}/>\r\n}\r\n\r\nexport default Reactjs;","import React from 'react';\r\nimport App from '../App';\r\n\r\nfunction Node() {\r\n  return <App searchTerm={\"Node\"}/>\r\n}\r\n\r\nexport default Node;\r\n\r\n","import React from 'react';\r\nimport App from '../App';\r\n\r\nfunction MongoDB() {\r\n  return <App searchTerm={\"MongoDb\"}/>\r\n}\r\n\r\nexport default MongoDB;","import React from 'react';\r\nimport App from '../App';\r\n\r\nfunction Express() {\r\n  return <App searchTerm={\"Express.js\"}/>\r\n}\r\n\r\nexport default Express;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\nimport './index.css';\r\nimport { BrowserRouter as Router, Route, Link, NavLink } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Navbar, Nav, NavItem } from 'react-bootstrap';\r\nimport Reactjs from './components/NavMenu/React';\r\nimport Node from './components/NavMenu/Node';\r\nimport MongoDB from './components/NavMenu/MongoDB';\r\nimport Express from './components/NavMenu/Express';\r\n\r\nfunction Root() {\r\n    return(\r\n        <Router basename=\"/NewsMan-React-App/\">\r\n            <div>\r\n                <Navbar className=\"bg-light\">\r\n                    <Navbar.Brand>\r\n                        <Link to=\"/\">NEWSMAN</Link>\r\n                    </Navbar.Brand>\r\n                    <Navbar.Toggle/>\r\n                    <Navbar.Collapse>\r\n                        <Nav>\r\n                            <NavItem className=\"ml-3\">\r\n                                <NavLink exact to=\"/\" actionClassName=\"active\">Home</NavLink>\r\n                            </NavItem>\r\n                            <NavItem className=\"ml-3\">\r\n                                <NavLink to=\"/mongodb\" actionClassName=\"active\">MongoDB</NavLink>\r\n                            </NavItem>\r\n                            <NavItem className=\"ml-3\">\r\n                                <NavLink to=\"/express\" actionClassName=\"active\">Express</NavLink>\r\n                            </NavItem>\r\n                            <NavItem className=\"ml-3\">\r\n                                <NavLink to=\"/react\" actionClassName=\"active\">React</NavLink>\r\n                            </NavItem>\r\n                            <NavItem className=\"ml-3\">\r\n                                <NavLink to=\"/node\" actionClassName=\"active\">Node</NavLink>\r\n                            </NavItem>\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Navbar>\r\n                \r\n                <Route path=\"/\" exact component={App}/>\r\n                <Route path=\"/react\" component={Reactjs}/>\r\n                <Route path=\"/node\" component={Node}/>\r\n                <Route path=\"/mongodb\" component={MongoDB}/>\r\n                <Route path=\"/express\" component={Express}/>\r\n\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\nReactDOM.render(<Root />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}